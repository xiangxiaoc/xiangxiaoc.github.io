import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as e,o as n}from"./app-CCRI7OdN.js";const t={};function h(l,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="typer-python-命令行工具库" tabindex="-1"><a class="header-anchor" href="#typer-python-命令行工具库"><span>typer - python 命令行工具库</span></a></h1><h2 id="一、概述" tabindex="-1"><a class="header-anchor" href="#一、概述"><span>一、概述</span></a></h2><p><code>typer</code>是一个基于Python的库，用于构建命令行接口（CLI）应用程序。它建立在<code>click</code>库之上，使得创建CLI应用变得更加简单、直观且高效。 <code>typer</code>具有自动生成帮助信息、类型提示支持等优秀特性，能帮助开发者快速开发出用户友好的命令行工具。</p><h2 id="二、pip安装" tabindex="-1"><a class="header-anchor" href="#二、pip安装"><span>二、pip安装</span></a></h2><p><strong>安装typer</strong> 在命令行中执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> typer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装成功后，即可在Python代码中使用<code>typer</code>。</p><h2 id="三、简单示例" tabindex="-1"><a class="header-anchor" href="#三、简单示例"><span>三、简单示例</span></a></h2><h3 id="_1-创建一个简单的cli应用" tabindex="-1"><a class="header-anchor" href="#_1-创建一个简单的cli应用"><span>1. 创建一个简单的CLI应用</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> typer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">app </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> typer.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Typer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@app</span><span style="--shiki-light:#4078F2;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    typer.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">name</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>首先，导入<code>typer</code>库并创建一个<code>Typer</code>实例<code>app</code>。</li><li>使用<code>@app.command()</code>装饰器定义一个命令<code>hello</code>，它接受一个字符串类型的参数<code>name</code>。</li><li>在<code>hello</code>函数内部，使用<code>typer.echo</code>输出问候语。</li><li>在<code>if __name__ == &quot;__main__&quot;</code>块中运行<code>app</code>，这样就可以在命令行中使用这个CLI应用了。例如，在命令行中运行 <code>python your_script.py hello --name=World</code>，就会输出<code>Hello World</code>。</li></ul><h3 id="_2-添加多个命令和选项" tabindex="-1"><a class="header-anchor" href="#_2-添加多个命令和选项"><span>2. 添加多个命令和选项</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> typer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">app </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> typer.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Typer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@app</span><span style="--shiki-light:#4078F2;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> create_user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;创建一个新用户。&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    typer.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;创建用户: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">username</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">，邮箱: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">email</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@app</span><span style="--shiki-light:#4078F2;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> delete_user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;删除一个用户。&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    typer.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;删除用户: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">username</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@app</span><span style="--shiki-light:#4078F2;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> list_users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;列出所有用户。&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    typer.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;列出用户列表（这里只是示例，实际需实现逻辑）&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里定义了三个命令：<code>create_user</code>、<code>delete_user</code>和<code>list_users</code>。</li><li><code>create_user</code>命令接受<code>username</code>、<code>password</code>和<code>email</code>三个参数，用于创建用户相关的操作，并输出相应信息。</li><li><code>delete_user</code>命令接受<code>username</code>参数，用于删除用户操作。</li><li><code>list_users</code>命令用于列出用户，这里只是简单输出示例文本，实际应用中需要实现具体的逻辑。</li></ul><h2 id="四、常见注意事项" tabindex="-1"><a class="header-anchor" href="#四、常见注意事项"><span>四、常见注意事项</span></a></h2><h3 id="_1-参数类型和验证" tabindex="-1"><a class="header-anchor" href="#_1-参数类型和验证"><span>1. 参数类型和验证</span></a></h3><ul><li><code>typer</code>利用Python的类型提示来进行参数类型验证。确保传递给命令的参数类型与定义的类型一致，否则<code>typer</code>会抛出错误。例如，如果定义了一个 <code>int</code>类型的参数，传递字符串会导致类型错误。</li></ul><h3 id="_2-帮助信息生成" tabindex="-1"><a class="header-anchor" href="#_2-帮助信息生成"><span>2. 帮助信息生成</span></a></h3><ul><li><code>typer</code>会自动根据函数的文档字符串（docstring）和参数类型等信息生成帮助信息。为每个命令和参数编写清晰、准确的文档字符串，有助于用户理解如何使用CLI应用。</li></ul><h3 id="_3-嵌套命令和子应用" tabindex="-1"><a class="header-anchor" href="#_3-嵌套命令和子应用"><span>3. 嵌套命令和子应用</span></a></h3><ul><li>当应用变得复杂时，可以创建嵌套命令和子应用。需要注意的是，要合理组织代码结构，避免过于复杂的嵌套导致代码难以维护和理解。</li></ul><h3 id="_4-与其他cli库的兼容性" tabindex="-1"><a class="header-anchor" href="#_4-与其他cli库的兼容性"><span>4. 与其他CLI库的兼容性</span></a></h3><ul><li>如果项目中同时使用了其他CLI相关的库，可能会出现冲突或不兼容的情况。需要在开发过程中仔细测试和解决可能出现的问题，特别是在导入和使用不同库的功能时。</li></ul>`,23)]))}const d=s(t,[["render",h]]),r=JSON.parse('{"path":"/notes/python/%E4%B8%89%E6%96%B9%E5%BA%93/typer.html","title":"typer - python 命令行工具库","lang":"zh-CN","frontmatter":{"date":"2022-01-09T00:00:00.000Z","category":"python","tag":["命令行工具"],"description":"typer - python 命令行工具库 一、概述 typer是一个基于Python的库，用于构建命令行接口（CLI）应用程序。它建立在click库之上，使得创建CLI应用变得更加简单、直观且高效。 typer具有自动生成帮助信息、类型提示支持等优秀特性，能帮助开发者快速开发出用户友好的命令行工具。 二、pip安装 安装typer 在命令行中执行： ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"typer - python 命令行工具库\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-09T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-02T07:54:44.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://xiangcheng.site/notes/python/%E4%B8%89%E6%96%B9%E5%BA%93/typer.html"}],["meta",{"property":"og:site_name","content":"大橙的运维宝典"}],["meta",{"property":"og:title","content":"typer - python 命令行工具库"}],["meta",{"property":"og:description","content":"typer - python 命令行工具库 一、概述 typer是一个基于Python的库，用于构建命令行接口（CLI）应用程序。它建立在click库之上，使得创建CLI应用变得更加简单、直观且高效。 typer具有自动生成帮助信息、类型提示支持等优秀特性，能帮助开发者快速开发出用户友好的命令行工具。 二、pip安装 安装typer 在命令行中执行： ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-02T07:54:44.000Z"}],["meta",{"property":"article:tag","content":"命令行工具"}],["meta",{"property":"article:published_time","content":"2022-01-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-02T07:54:44.000Z"}]]},"git":{"createdTime":1732214708000,"updatedTime":1735804484000,"contributors":[{"name":"daCheng","username":"daCheng","email":"xiangxiaoc@outlook.com","commits":2,"url":"https://github.com/daCheng"}]},"readingTime":{"minutes":2.58,"words":773},"filePathRelative":"notes/python/三方库/typer.md","excerpt":"\\n<h2>一、概述</h2>\\n<p><code>typer</code>是一个基于Python的库，用于构建命令行接口（CLI）应用程序。它建立在<code>click</code>库之上，使得创建CLI应用变得更加简单、直观且高效。\\n<code>typer</code>具有自动生成帮助信息、类型提示支持等优秀特性，能帮助开发者快速开发出用户友好的命令行工具。</p>\\n<h2>二、pip安装</h2>\\n<p><strong>安装typer</strong>\\n在命令行中执行：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">pip</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> install</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> typer</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,r as data};
