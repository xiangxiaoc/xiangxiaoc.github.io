import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as _,o as i}from"./app-BSVt15jY.js";const n={};function r(R,p){return i(),t("div",null,p[0]||(p[0]=[_('<h1 id="job-build-中的内置变量" tabindex="-1"><a class="header-anchor" href="#job-build-中的内置变量"><span>Job build 中的内置变量</span></a></h1><p>BRANCH_NAME（分支名称）</p><p>对于多分支项目，此变量将被设置为正在构建的分支的名称。例如，倘若你希望从主分支（master）部署到生产环境，但不想从特性分支（feature branches）进行部署时就会用到它；如果对应某种变更请求，该名称通常是任意的（可参考 CHANGE_ID 和 CHANGE_TARGET）。</p><p>BRANCH_IS_PRIMARY（分支是否为主分支）</p><p>对于多分支项目，如果版本控制系统（SCM）源报告正在构建的分支是主分支，此变量将被设置为 “true”；否则，该变量将不会被设置。某些版本控制系统源可能会将多个分支报告为主分支，而其他一些可能不会提供此信息。</p><p>CHANGE_ID（变更编号）</p><p>对于对应某种变更请求的多分支项目，如果支持的话，此变量将被设置为变更编号，比如拉取请求（pull request）的编号；否则，该变量将不会被设置。</p><p>CHANGE_URL（变更链接）</p><p>对于对应某种变更请求的多分支项目，如果支持的话，此变量将被设置为变更的链接；否则，该变量将不会被设置。</p><p>CHANGE_TITLE（变更标题）</p><p>对于对应某种变更请求的多分支项目，如果支持的话，此变量将被设置为变更的标题；否则，该变量将不会被设置。</p><p>CHANGE_AUTHOR（变更作者用户名）</p><p>对于对应某种变更请求的多分支项目，如果支持的话，此变量将被设置为所提议变更的作者的用户名；否则，该变量将不会被设置。</p><p>CHANGE_AUTHOR_DISPLAY_NAME（变更作者显示名称）</p><p>对于对应某种变更请求的多分支项目，如果支持的话，此变量将被设置为作者的真实姓名；否则，该变量将不会被设置。</p><p>CHANGE_AUTHOR_EMAIL（变更作者邮箱地址）</p><p>对于对应某种变更请求的多分支项目，如果支持的话，此变量将被设置为作者的邮箱地址；否则，该变量将不会被设置。</p><p>CHANGE_TARGET（变更目标分支）</p><p>对于对应某种变更请求的多分支项目，如果支持的话，此变量将被设置为变更可合并到的目标或基础分支；否则，该变量将不会被设置。</p><p>CHANGE_BRANCH（变更分支）</p><p>对于对应某种变更请求的多分支项目，此变量将被设置为在源代码控制系统上实际头部的名称，它可能与 BRANCH_NAME 相同，也可能不同。例如，在 GitHub 或 Bitbucket 中，它会是源分支的名称，而 BRANCH_NAME 可能类似于 PR - 24 这样的名称。</p><p>CHANGE_FORK（变更来源仓库分支）</p><p>对于对应某种变更请求的多分支项目，如果变更来自于一个分叉仓库，此变量将被设置为该分叉仓库的名称；否则，该变量将不会被设置。</p><p>TAG_NAME（标签名称）</p><p>对于对应某种标签的多分支项目，如果支持的话，此变量将被设置为正在构建的标签的名称；否则，该变量将不会被设置。</p><p>TAG_TIMESTAMP（标签时间戳 - 毫秒）</p><p>对于对应某种标签的多分支项目，如果支持的话，此变量将被设置为自 Unix 纪元（1970 年 1 月 1 日 00:00:00 UTC）以来以毫秒为单位的标签时间戳；否则，该变量将不会被设置。</p><p>TAG_UNIXTIME（标签时间戳 - 秒）</p><p>对于对应某种标签的多分支项目，如果支持的话，此变量将被设置为自 Unix 纪元以来以秒为单位的标签时间戳；否则，该变量将不会被设置。</p><p>TAG_DATE（标签日期）</p><p>对于对应某种标签的多分支项目，如果支持的话，此变量将被设置为按照 java.util.Date#toString() 所定义格式（例如，Wed Jan 1 00:00:00 UTC 2020）的时间戳；否则，该变量将不会被设置。</p><p>JOB_DISPLAY_URL（任务展示链接）</p><p>此 URL 将重定向到首选用户界面中的任务（Job）。</p><p>RUN_DISPLAY_URL（构建展示链接）</p><p>此 URL 将重定向到首选用户界面中的构建（Build）。</p><p>RUN_ARTIFACTS_DISPLAY_URL（构建产物展示链接）</p><p>此 URL 将重定向到首选用户界面中构建的产物（Artifacts）。</p><p>RUN_CHANGES_DISPLAY_URL（构建变更记录展示链接）</p><p>此 URL 将重定向到首选用户界面中构建的变更记录（Changelog）。</p><p>RUN_TESTS_DISPLAY_URL（构建测试结果展示链接）</p><p>此 URL 将重定向到首选用户界面中构建的测试结果（Test Results）。</p><p>CI（持续集成标识）</p><p>此变量被静态设置为字符串 “true”，用于表示处于 “持续集成” 执行环境。</p><p>BUILD_NUMBER（构建编号）</p><p>当前构建的编号，例如 “153”。</p><p>BUILD_ID（构建编号标识）</p><p>当前构建的标识。在 Jenkins 1.597 及更高版本创建的构建中，它与 BUILD_NUMBER 相同，但对于旧版本的构建，它是一个 YYYY-MM-DD_hh-mm-ss 格式的时间戳。</p><p>BUILD_DISPLAY_NAME（构建显示名称）</p><p>当前构建的显示名称，默认情况下类似于 “#153”。</p><p>JOB_NAME（任务名称）</p><p>此次构建所属项目的名称，例如 “foo” 或者 “foo/bar”。</p><p>JOB_BASE_NAME（任务基础名称）</p><p>此次构建所属项目的简短名称，即去除文件夹路径后的名称，例如对于 “bar/foo”，其 JOB_BASE_NAME 就是 “foo”。</p><p>BUILD_TAG（构建标签）</p><p>格式为 “jenkins - ${JOB_NAME} - ${BUILD_NUMBER}” 的字符串。JOB_NAME 中的所有正斜杠（“/”）都将被替换为连字符（“-”）。方便放入资源文件、JAR 文件等中，以便更容易识别。</p><p>EXECUTOR_NUMBER（执行器编号）</p><p>用于标识正在执行此次构建的当前执行器（在同一台机器的多个执行器之中）的唯一编号。这个编号就是你在 “构建执行器状态” 中看到的编号，不过这里的编号是从 0 开始，而不是从 1 开始。</p><p>NODE_NAME（节点名称）</p><p>如果构建是在代理节点（agent）上进行的，此变量就是该代理节点的名称；如果是在内置节点（或在 Jenkins 2.306 之前的 “主节点（master）”）上运行，则此变量为 “内置（built-in）”。</p><p>NODE_LABELS（节点标签）</p><p>节点被分配的以空格分隔的标签列表。</p><p>WORKSPACE（工作空间绝对路径）</p><p>分配给构建作为工作空间的目录的绝对路径。</p><p>WORKSPACE_TMP（临时工作空间目录）</p><p>工作空间附近的一个临时目录，该目录不可浏览，并且不会干扰版本控制系统（SCM）的检出操作。该目录最初可能不存在，所以务必根据需要创建该目录（例如，在 Linux 上使用 mkdir -p 命令）。当常规工作空间是驱动器根目录时，此变量未定义。</p><p>JENKINS_HOME（Jenkins 主目录绝对路径）</p><p>在控制器文件系统上分配给 Jenkins 用于存储数据的目录的绝对路径。</p><p>JENKINS_URL（Jenkins 完整 URL）</p><p>Jenkins 的完整 URL，例如 http://server:port/jenkins/（注意：只有在系统配置中设置了 Jenkins URL 时才可用）。</p><p>BUILD_URL（构建完整 URL）</p><p>此次构建的完整 URL，例如 http://server:port/jenkins/job/foo/15/（必须设置 Jenkins URL）。</p><p>JOB_URL（任务完整 URL）</p><p>此次任务的完整 URL，例如 http://server:port/jenkins/job/foo/（必须设置 Jenkins URL）。</p><p>GIT_COMMIT（Git 提交哈希）</p><p>正在检出的提交的哈希值。</p><p>GIT_PREVIOUS_COMMIT（Git 上一次提交的哈希）</p><p>在此分支上上次构建的提交的哈希值（如果有的话）。</p><p>GIT_PREVIOUS_SUCCESSFUL_COMMIT（Git 上一次成功构建的提交哈希）</p><p>在此分支上上次成功构建的提交的哈希值（如果有的话）。</p><p>GIT_BRANCH（Git 远程分支名称）</p><p>如果有的话，为远程分支的名称。</p><p>GIT_LOCAL_BRANCH（Git 本地分支名称）</p><p>如果适用的话，正在检出的本地分支的名称。</p><p>GIT_CHECKOUT_DIR（Git 检出目录）</p><p>仓库将被检出到的目录。如果使用了 “检出到子目录” 功能，此变量包含该设置的值。</p><p>GIT_URL（Git 远程 URL）</p><p>远程 URL。如果有多个远程仓库，将会有 GIT_URL_1、GIT_URL_2 等变量来表示。</p><p>GIT_COMMITTER_NAME（Git 提交者姓名）</p><p>配置的 Git 提交者姓名（如果有的话），它将用于从当前工作空间进行的未来提交操作。它是从 Jenkins “配置系统” 页面的 “全局配置 user.name 值” 字段中读取的。</p><p>GIT_AUTHOR_NAME（Git 作者姓名）</p><p>配置的 Git 作者姓名（如果有的话），它将用于从当前工作空间进行的未来提交操作。它是从 Jenkins “配置系统” 页面的 “全局配置 user.name 值” 字段中读取的。</p><p>GIT_COMMITTER_EMAIL（Git 提交者邮箱）</p><p>配置的 Git 提交者邮箱（如果有的话），它将用于从当前工作空间进行的未来提交操作。它是从 Jenkins “配置系统” 页面的 “全局配置 user.email 值” 字段中读取的。</p><p>GIT_AUTHOR_EMAIL（Git 作者邮箱）</p><p>配置的 Git 作者邮箱（如果有的话），它将用于从当前工作空间进行的未来提交操作。它是从 Jenkins “配置系统” 页面的 “全局配置 user.email 值” 字段中读取的。</p><p>MERCURIAL_REVISION（Mercurial 版本完整编号）</p><p>检出的版本的完整编号。</p><p>MERCURIAL_REVISION_SHORT（Mercurial 版本缩写编号）</p><p>检出的版本的缩写编号。</p><p>MERCURIAL_REVISION_NUMBER（Mercurial 版本编号）</p><p>检出的版本的编号（在克隆之间不可移植）。</p><p>MERCURIAL_REVISION_BRANCH（Mercurial 版本分支）</p><p>检出的版本所在的分支（如果不是按分支头部检出的话）。</p><p>MERCURIAL_REPOSITORY_URL（Mercurial 仓库 URL）</p><p>Mercurial 仓库的 URL。</p><p>SVN_REVISION（Subversion 版本编号）</p><p>当前检出到工作空间的 Subversion 版本编号，例如 “12345”。</p><p>SVN_URL（Subversion 仓库 URL）</p><p>当前检出到工作空间的 Subversion 仓库的 URL。</p>',109)]))}const A=e(n,[["render",r],["__file","内置变量.html.vue"]]),E=JSON.parse('{"path":"/CICD/Jenkins/%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F.html","title":"Job build 中的内置变量","lang":"zh-CN","frontmatter":{"date":"2022-01-09T00:00:00.000Z","category":"Jenkins","tag":["CICD"],"description":"Job build 中的内置变量 BRANCH_NAME（分支名称） 对于多分支项目，此变量将被设置为正在构建的分支的名称。例如，倘若你希望从主分支（master）部署到生产环境，但不想从特性分支（feature branches）进行部署时就会用到它；如果对应某种变更请求，该名称通常是任意的（可参考 CHANGE_ID 和 CHANGE_TARGET...","head":[["meta",{"property":"og:url","content":"https://xiangcheng.site/CICD/Jenkins/%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F.html"}],["meta",{"property":"og:site_name","content":"大橙的运维宝典"}],["meta",{"property":"og:title","content":"Job build 中的内置变量"}],["meta",{"property":"og:description","content":"Job build 中的内置变量 BRANCH_NAME（分支名称） 对于多分支项目，此变量将被设置为正在构建的分支的名称。例如，倘若你希望从主分支（master）部署到生产环境，但不想从特性分支（feature branches）进行部署时就会用到它；如果对应某种变更请求，该名称通常是任意的（可参考 CHANGE_ID 和 CHANGE_TARGET..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-22T04:15:27.000Z"}],["meta",{"property":"article:tag","content":"CICD"}],["meta",{"property":"article:published_time","content":"2022-01-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-22T04:15:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Job build 中的内置变量\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-22T04:15:27.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1732214708000,"updatedTime":1732248927000,"contributors":[{"name":"daCheng","email":"xiangxiaoc@outlook.com","commits":1}]},"readingTime":{"minutes":8.07,"words":2422},"filePathRelative":"CICD/Jenkins/内置变量.md","localizedDate":"2022年1月9日","excerpt":"\\n<p>BRANCH_NAME（分支名称）</p>\\n<p>对于多分支项目，此变量将被设置为正在构建的分支的名称。例如，倘若你希望从主分支（master）部署到生产环境，但不想从特性分支（feature branches）进行部署时就会用到它；如果对应某种变更请求，该名称通常是任意的（可参考 CHANGE_ID 和 CHANGE_TARGET）。</p>\\n<p>BRANCH_IS_PRIMARY（分支是否为主分支）</p>\\n<p>对于多分支项目，如果版本控制系统（SCM）源报告正在构建的分支是主分支，此变量将被设置为 “true”；否则，该变量将不会被设置。某些版本控制系统源可能会将多个分支报告为主分支，而其他一些可能不会提供此信息。</p>","autoDesc":true}');export{A as comp,E as data};
