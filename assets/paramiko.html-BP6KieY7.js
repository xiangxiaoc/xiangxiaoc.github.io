import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as e}from"./app-B3jraSy9.js";const l={};function t(h,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="paramiko-通过-ssh-协议执行命令" tabindex="-1"><a class="header-anchor" href="#paramiko-通过-ssh-协议执行命令"><span>paramiko - 通过 ssh 协议执行命令</span></a></h1><h3 id="一、概述" tabindex="-1"><a class="header-anchor" href="#一、概述"><span>一、概述</span></a></h3><p><code>paramiko</code> 是Python中一个用于实现SSH2协议的库，通过它可以方便地在Python程序中进行远程服务器连接、执行命令、传输文件等操作，功能强大且应用广泛。</p><h3 id="二、pip-安装" tabindex="-1"><a class="header-anchor" href="#二、pip-安装"><span>二、pip 安装</span></a></h3><p><strong>使用 <code>pip</code> 安装 <code>paramiko</code></strong>： 在命令行中输入以下命令来安装 <code>paramiko</code> 库：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> paramiko</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>等待安装过程完成，安装成功后，就可以在Python代码中导入并使用 <code>paramiko</code> 库了。</p><h3 id="三、简单示例" tabindex="-1"><a class="header-anchor" href="#三、简单示例"><span>三、简单示例</span></a></h3><p>以下是几个使用 <code>paramiko</code> 库常见操作的简单示例：</p><h4 id="_1-连接远程服务器并执行命令" tabindex="-1"><a class="header-anchor" href="#_1-连接远程服务器并执行命令"><span>1. 连接远程服务器并执行命令</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> paramiko</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建SSH对象</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ssh </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> paramiko.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">SSHClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 允许连接不在know_hosts文件中的主机</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ssh.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">set_missing_host_key_policy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(paramiko.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">AutoAddPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 连接服务器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ssh.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">hostname</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;your_server_ip&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">22</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">username</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;your_username&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">password</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;your_password&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 执行命令</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">stdin, stdout, stderr </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ssh.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">exec_command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ls&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取命令结果</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> stdout.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">decode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;utf-8&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(result)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 关闭连接</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ssh.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上述示例中：</p><ul><li>首先导入了 <code>paramiko</code> 库。</li><li>创建了 <code>SSHClient</code> 对象来代表SSH连接客户端。</li><li>通过 <code>set_missing_host_key_policy</code> 方法设置了自动添加未知主机密钥的策略（在实际更安全的场景中，可能需要更严谨地处理主机密钥验证）。</li><li>使用 <code>connect</code> 方法，传入服务器IP、端口、用户名和密码来建立与远程服务器的连接。</li><li>利用 <code>exec_command</code> 方法执行 <code>ls</code> 命令（这里可以替换为任何合法的服务器端命令），并获取命令执行后的标准输出结果，进行解码和打印。</li><li>最后关闭了SSH连接。</li></ul><h4 id="_2-使用-paramiko-进行文件传输-上传文件示例" tabindex="-1"><a class="header-anchor" href="#_2-使用-paramiko-进行文件传输-上传文件示例"><span>2. 使用 <code>paramiko</code> 进行文件传输（上传文件示例）</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> paramiko</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 连接信息</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">transport </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> paramiko.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Transport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;your_server_ip&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">22</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">transport.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">username</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;your_username&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">password</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;your_password&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建SFTP客户端对象</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sftp </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> paramiko.SFTPClient.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">from_transport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(transport)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 本地文件路径和远程服务器文件路径</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">local_path </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;local_file.txt&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">remote_path </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/home/user/remote_file.txt&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 上传文件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sftp.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">put</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(local_path, remote_path)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 关闭连接</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sftp.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">transport.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此示例展示了如何将本地文件上传到远程服务器：</p><ul><li>先通过 <code>Transport</code> 类建立与服务器的传输通道，并进行连接认证。</li><li>然后基于传输通道创建 <code>SFTPClient</code> 对象用于文件传输操作。</li><li>指定本地文件路径和远程服务器上要存放文件的路径，使用 <code>put</code> 方法实现文件上传。</li><li>最后关闭SFTP客户端连接以及传输通道连接。</li></ul><h3 id="四、常见注意事项" tabindex="-1"><a class="header-anchor" href="#四、常见注意事项"><span>四、常见注意事项</span></a></h3><h4 id="_1-主机密钥验证" tabindex="-1"><a class="header-anchor" href="#_1-主机密钥验证"><span>1. 主机密钥验证</span></a></h4><ul><li>在实际应用中，直接使用 <code>AutoAddPolicy</code> 自动添加未知主机密钥是不安全的，因为可能会遭遇中间人攻击等安全风险。更好的做法是手动验证主机密钥，可以将已知服务器的公钥保存下来，在连接时对比验证，例如使用 <code>paramiko.RejectPolicy()</code> 先拒绝未知主机密钥连接，然后手动处理验证逻辑，像对比 <code>known_hosts</code> 文件中的公钥等。</li></ul><h4 id="_2-异常处理" tabindex="-1"><a class="header-anchor" href="#_2-异常处理"><span>2. 异常处理</span></a></h4><ul><li><code>paramiko</code> 相关操作可能会因为网络问题、认证失败、远程服务器故障等多种原因抛出异常，比如连接时可能出现 <code>paramiko.AuthenticationException</code>（认证异常）、<code>paramiko.SSHException</code>（SSH相关通用异常）等。所以在代码中应该合理地使用 <code>try...except</code> 语句块来捕获异常并进行相应的处理，避免程序因为这些异常而崩溃。</li></ul><h4 id="_3-内存管理与资源释放" tabindex="-1"><a class="header-anchor" href="#_3-内存管理与资源释放"><span>3. 内存管理与资源释放</span></a></h4><ul><li>当创建了 <code>SSHClient</code>、<code>SFTPClient</code> 等对象以及建立的连接通道等，在使用完后一定要记得及时关闭（如调用 <code>close</code> 方法），否则可能会导致内存泄漏或者占用过多的系统资源，尤其是在长时间运行的程序或者频繁进行连接操作的场景中。</li></ul><h4 id="_4-字符编码问题" tabindex="-1"><a class="header-anchor" href="#_4-字符编码问题"><span>4. 字符编码问题</span></a></h4><ul><li>在获取远程命令执行结果或者处理文件传输涉及文本内容时，要注意字符编码问题。通常远程服务器端的输出默认可能是某种编码格式（如 <code>utf-8</code>、<code>latin-1</code> 等），需要根据实际情况正确地进行解码操作，否则可能会出现乱码情况，像上面示例中执行命令获取结果时使用 <code>stdout.read().decode(&#39;utf-8&#39;)</code> 进行 <code>utf-8</code> 解码，要确保服务器输出是 <code>utf-8</code> 编码格式才行，如果不确定需要先确认服务器端的编码配置并相应调整解码方式。</li></ul>`,26)]))}const d=s(l,[["render",t],["__file","paramiko.html.vue"]]),r=JSON.parse('{"path":"/python/%E4%B8%89%E6%96%B9%E5%BA%93/paramiko.html","title":"paramiko - 通过 ssh 协议执行命令","lang":"zh-CN","frontmatter":{"date":"2022-01-09T00:00:00.000Z","category":"python","tag":["ssh"],"description":"paramiko - 通过 ssh 协议执行命令 一、概述 paramiko 是Python中一个用于实现SSH2协议的库，通过它可以方便地在Python程序中进行远程服务器连接、执行命令、传输文件等操作，功能强大且应用广泛。 二、pip 安装 使用 pip 安装 paramiko： 在命令行中输入以下命令来安装 paramiko 库： 等待安装过程完...","head":[["meta",{"property":"og:url","content":"https://xiangcheng.site/python/%E4%B8%89%E6%96%B9%E5%BA%93/paramiko.html"}],["meta",{"property":"og:site_name","content":"大橙的运维宝典"}],["meta",{"property":"og:title","content":"paramiko - 通过 ssh 协议执行命令"}],["meta",{"property":"og:description","content":"paramiko - 通过 ssh 协议执行命令 一、概述 paramiko 是Python中一个用于实现SSH2协议的库，通过它可以方便地在Python程序中进行远程服务器连接、执行命令、传输文件等操作，功能强大且应用广泛。 二、pip 安装 使用 pip 安装 paramiko： 在命令行中输入以下命令来安装 paramiko 库： 等待安装过程完..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-21T18:45:08.000Z"}],["meta",{"property":"article:tag","content":"ssh"}],["meta",{"property":"article:published_time","content":"2022-01-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-21T18:45:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"paramiko - 通过 ssh 协议执行命令\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-21T18:45:08.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"一、概述","slug":"一、概述","link":"#一、概述","children":[]},{"level":3,"title":"二、pip 安装","slug":"二、pip-安装","link":"#二、pip-安装","children":[]},{"level":3,"title":"三、简单示例","slug":"三、简单示例","link":"#三、简单示例","children":[]},{"level":3,"title":"四、常见注意事项","slug":"四、常见注意事项","link":"#四、常见注意事项","children":[]}],"git":{"createdTime":1732214708000,"updatedTime":1732214708000,"contributors":[{"name":"daCheng","email":"xiangxiaoc@outlook.com","commits":1}]},"readingTime":{"minutes":3.66,"words":1099},"filePathRelative":"python/三方库/paramiko.md","localizedDate":"2022年1月9日","excerpt":"\\n<h3>一、概述</h3>\\n<p><code>paramiko</code> 是Python中一个用于实现SSH2协议的库，通过它可以方便地在Python程序中进行远程服务器连接、执行命令、传输文件等操作，功能强大且应用广泛。</p>\\n<h3>二、pip 安装</h3>\\n<p><strong>使用 <code>pip</code> 安装 <code>paramiko</code></strong>：\\n在命令行中输入以下命令来安装 <code>paramiko</code> 库：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">pip</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> install</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> paramiko</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,r as data};
