import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as i,o as n}from"./app-DGMqb2HY.js";const a={};function r(l,o){return n(),e("div",null,o[0]||(o[0]=[i('<h1 id="go-软件包概念" tabindex="-1"><a class="header-anchor" href="#go-软件包概念"><span>Go 软件包概念</span></a></h1><h2 id="一些规定" tabindex="-1"><a class="header-anchor" href="#一些规定"><span>一些规定</span></a></h2><ul><li>大写字母开头可跨包调用</li><li>文件夹的名字可以和包名不同，同一文件夹下的各文件的包名得相同</li></ul><h2 id="import-从哪个路径开始找的" tabindex="-1"><a class="header-anchor" href="#import-从哪个路径开始找的"><span>import 从哪个路径开始找的</span></a></h2><ol><li>go.mod 所在目录</li><li>$GOROOT/src</li><li>$GOPATH/src (Go 1.11 后需要 <code>GO111MODULE=off</code>)</li><li>$GOPATH/vendor （Go 1.5）</li><li>$GOPATH/pkg/mod （Go 1.11）</li></ol><blockquote><p>注意：</p><p>GOPATH 可以是多个路径</p><p>GOPATH=&quot;PATH1:PATH2&quot;</p></blockquote><h3 id="init-函数" tabindex="-1"><a class="header-anchor" href="#init-函数"><span>init 函数</span></a></h3><ul><li>main 执行前，先执行 import 包里所有的 init 函数</li><li>根据 import 顺序执行，是有序的</li><li>包里多文件都有多个 init 方法的顺序：先文件名排序，再 init 在文件中的排序</li></ul><h2 id="官方模块管理-go-mod" tabindex="-1"><a class="header-anchor" href="#官方模块管理-go-mod"><span>官方模块管理 go mod</span></a></h2><p>go mod init 在项目跟目录创建 go.mod ，这个文件里就描述了包管理需要的数据</p><p>$GOPATH/pkg/mod ： go get 后下载到这里</p><p>go mod tidy 可以根据代码 import 的包下载</p>',12)]))}const d=t(a,[["render",r]]),m=JSON.parse('{"path":"/notes/golang/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E8%BD%AF%E4%BB%B6%E5%8C%85%E6%A6%82%E5%BF%B5.html","title":"Go 软件包概念","lang":"zh-CN","frontmatter":{"date":"2022-01-09T00:00:00.000Z","category":"Go","tag":["Go软件包"],"description":"Go 软件包概念 一些规定 大写字母开头可跨包调用 文件夹的名字可以和包名不同，同一文件夹下的各文件的包名得相同 import 从哪个路径开始找的 go.mod 所在目录 $GOROOT/src $GOPATH/src (Go 1.11 后需要 GO111MODULE=off) $GOPATH/vendor （Go 1.5） $GOPATH/pkg/m...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go 软件包概念\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-09T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-02T07:54:44.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://xiangcheng.site/notes/golang/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E8%BD%AF%E4%BB%B6%E5%8C%85%E6%A6%82%E5%BF%B5.html"}],["meta",{"property":"og:site_name","content":"大橙的运维宝典"}],["meta",{"property":"og:title","content":"Go 软件包概念"}],["meta",{"property":"og:description","content":"Go 软件包概念 一些规定 大写字母开头可跨包调用 文件夹的名字可以和包名不同，同一文件夹下的各文件的包名得相同 import 从哪个路径开始找的 go.mod 所在目录 $GOROOT/src $GOPATH/src (Go 1.11 后需要 GO111MODULE=off) $GOPATH/vendor （Go 1.5） $GOPATH/pkg/m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-02T07:54:44.000Z"}],["meta",{"property":"article:tag","content":"Go软件包"}],["meta",{"property":"article:published_time","content":"2022-01-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-02T07:54:44.000Z"}]]},"git":{"createdTime":1732214708000,"updatedTime":1735804484000,"contributors":[{"name":"daCheng","username":"daCheng","email":"xiangxiaoc@outlook.com","commits":2,"url":"https://github.com/daCheng"}]},"readingTime":{"minutes":0.76,"words":229},"filePathRelative":"notes/golang/工程化/软件包概念.md","excerpt":"\\n<h2>一些规定</h2>\\n<ul>\\n<li>大写字母开头可跨包调用</li>\\n<li>文件夹的名字可以和包名不同，同一文件夹下的各文件的包名得相同</li>\\n</ul>\\n<h2>import 从哪个路径开始找的</h2>\\n<ol>\\n<li>go.mod 所在目录</li>\\n<li>$GOROOT/src</li>\\n<li>$GOPATH/src (Go 1.11 后需要 <code>GO111MODULE=off</code>)</li>\\n<li>$GOPATH/vendor （Go 1.5）</li>\\n<li>$GOPATH/pkg/mod （Go 1.11）</li>\\n</ol>\\n<blockquote>\\n<p>注意：</p>\\n<p>GOPATH 可以是多个路径</p>\\n<p>GOPATH=\\"PATH1:PATH2\\"</p>\\n</blockquote>","autoDesc":true}');export{d as comp,m as data};
